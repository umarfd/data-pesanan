name: Build, Push, and Deploy Docker Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io/umarfd          # host + namespace GHCR
  IMAGE_NAME: data-pesanan          # nama imagenya
  DOCKER_BUILDKIT: 1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      #––– 1. Tentukan tag image (pakai SHA commit) ––––––––––––––––––––––––––
      - name: Set image tag
        id: img_tag
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      #––– 2. Login ke GHCR pakai PAT ––––––––––––––––––––––––––––––––––––––––
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      #––– 3. Build & push image ––––––––––––––––––––––––––––––––––––––––––––
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' }}          # hanya push di event push
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}

  deploy:
    needs: build-and-push
    if: github.event_name == 'push'       # lewati untuk PR
    runs-on: ubuntu-latest

    steps:
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: latest

      - name: Setup kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Deploy to k3s with Helm
        run: |
          helm repo add umarfd https://umarfd.github.io/data-pesanan-helm-chart
          helm repo update
          helm upgrade --install data-pesanan umarfd/app \
            --namespace dev \
            --create-namespace \
            --set image.repository=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
            --set image.tag=${{ env.IMAGE_TAG }}
